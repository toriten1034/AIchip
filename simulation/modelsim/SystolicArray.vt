// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "12/27/2018 10:06:52"
                                                                                
// Verilog Test Bench template for design : SystolicArray
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module SystolicArray_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg CLK;
reg [17:0] IN_0;
reg [17:0] IN_1;
reg [17:0] IN_2;
reg [17:0] IN_3;
reg [17:0] IN_4;
reg [17:0] IN_5;
reg [17:0] IN_6;
reg [17:0] IN_7;
reg RST;
reg WE;
// wires                                               
wire [17:0]  OUT_A;
wire [17:0]  OUT_B;
wire [17:0]  OUT_C;
wire [17:0]  OUT_D;
wire [17:0]  OUT_E;
wire [17:0]  OUT_F;
wire [17:0]  OUT_G;
wire [17:0]  OUT_H;

// assign statements (if any)                          
SystolicArray i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.IN_0(IN_0),
	.IN_1(IN_1),
	.IN_2(IN_2),
	.IN_3(IN_3),
	.IN_4(IN_4),
	.IN_5(IN_5),
	.IN_6(IN_6),
	.IN_7(IN_7),
	.OUT_A(OUT_A),
	.OUT_B(OUT_B),
	.OUT_C(OUT_C),
	.OUT_D(OUT_D),
	.OUT_E(OUT_E),
	.OUT_F(OUT_F),
	.OUT_G(OUT_G),
	.OUT_H(OUT_H),
	.RST(RST),
	.WE(WE)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

